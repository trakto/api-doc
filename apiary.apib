FORMAT: 1A
HOST: https://main.trakto.io/docsApi/api/v1

# Trakto SDK


# 1) Concepts

| Term              | What's is this 
|---                |--- 
|**Trakto Button®** | Tool that visually integrates the editor with your application
|**API**            | Tool that manages documents and templates available to your user
|**Templates**      | It's a predefined document that can be copied so that someone can edit it through the editor. 
|**Formats**        | Are descriptions of pages that are used to create new documents or arts through the editor.
|**Documents**      | They are materials created through the editor, for example the arts for social networks.

# 2) Requirements

To use, the API requires:

1. **API Secret**: Unique and secret key available in your Trakto's Admin platform;
2. **Product Key**: Public key used for your product in editor embed;
3. **User Token**: User Id available via API and Trakto Button®;
4. **Origin**: Allowed URL for API usage.

# 3) URL source

## Localhost mode

When you're testing`localhost`, the Trakto Button® and Sdk® is avaliable only on ports:

|Host                 |
|---------------------|
|http://localhost:3000|
|http://localhost:4000|
|http://localhost:4200|
|http://localhost:5000|
|http://localhost:8000|
|http://localhost:8080|

## Live mode
| Tool          | URL                                                                           | Mode |        Note        |
|---------------|-------------------------------------------------------------------------------|------|--------------------|
|**Sdk**        | https://sdk.trakto.io/trakto-editor.min.js                                    | Live |                    |
|**Sdk**        | https://sdk-review.web.app/trakto-editor.min.js                               | Beta |                    |
|**API**        | https://us-central1-trakto-production.cloudfunctions.net/docsApi/api/v1/      | Live |                    |
|**API**        | https://us-central1-trakto-production.cloudfunctions.net/docsApiBeta/api/v1/  | Beta |                    |
|**Dashboard**  | https://beta.trakto.io                                                        | Beta |                    |
|**Dashboard**  | https://seueditor.com                                                         | Live | Whitelabel Version |
|**Dashboard**  | https://dashboard.trakto.io                                                   | Live | General Version    |

# 4) Examples

1. See our example project in **Github**: https://github.com/trakto/trakto-sdk-sample
2. See the button in **action**: https://sdk-sample-page.web.app/

# 5) Getting Started with Trakto SDK®

The Trakto Button® allows the Trakto editor to be used within your application.

The editor is made available according to the look of your website and with totally customized content for your customers.

**[Watch the video of the button in operation](https://cdn-std.dprcdn.net/files/acc_632271/NuzGtr)**

## Understanding the boot flow

**There are 2 ways to create and edit documents with the editor using Trakto Button®. For each of them, different button assignments are used:**
 - **HTML Button**
 - **JS Functions**

The image below shows the datailed flow of button operation when integrated into your platform.

<img src="https://camo.githubusercontent.com/ed2ff0031816864a53ef013e9e5fde4b6c9f15c2/68747470733a2f2f666972656261736573746f726167652e676f6f676c65617069732e636f6d2f76302f622f7472616b746f2d6465762e61707073706f742e636f6d2f6f2f6465765f6173736574732532465472616b746f253230427574746f6e25323053444b2e6a70673f616c743d6d6564696126746f6b656e3d38313463663264622d333237352d346564662d396635392d313830653464363462383061" width=100%>

</br>



## Getting the sdk

```
    <script src="https://sdk.trakto.io/trakto-editor.min.js"></script>
```

## Starting via Tag Button

```javascript
 <script>
    window.onload = () => {
        (function() {
            TraktoEditor.init({
                apiSecret: 'Your Api Key',
                productKey: 'Your Product Key',
                lang: 'pt-BR | en-US',
                userEmail: 'user@email.com',
                customLoaderImageUrl: 'Loader image URL',
                customLoaderColor: 'Hex Loader color',
                customLoaderBgColor: 'Hex Background Loader Color',
                fullScreen: true,
                closeButtonClass: 'your-class-here',
                closeButton: `<img src='https://cdn4.com/x.png'/>`,
                allowNewPages: true,
                defaultFiletype: 'base64 | url',
                downloadType: 'pdf | mp4 | png | fullDownloadOnBrowser',
                saveButtonText: 'Text from save button',
                saveButtonMessage: 'Message of downloads modal'
                defaultErrorHandler: error => {},
                listFormatsCallback: (data) => {},
                listTemplatesCallback: (data) => {},
                listDocumentsCallback: (data) => {},
                onClose: () => { }
            });
        })();
    };
</script>
```


## Starting via JS Function

```javascript
<script>
    window.onload = () => {
        (function() {
            TraktoEditor.init({
                apiSecret: 'Your Api Key',
                productKey: 'Your Product Key',
                lang: 'pt-BR | en-US',
                userEmail: 'user@email.com',
                customLoaderImageUrl: 'Loader image URL',
                customLoaderColor: 'Hex Loader color',
                customLoaderBgColor: 'Hex Background Loader Color',
                fullScreen: true,
                closeButtonClass: 'your-class-here',
                closeButton: `<img src='https://cdn4.com/x.png'/>`,
                allowNewPages: true,
                saveButtonText: 'Text from save button',
                saveButtonMessage: 'Message of downloads modal'
                defaultFiletype: 'base64 | url',
                downloadType: 'pdf | mp4 | png | fullDownloadOnBrowser',
                defaultErrorHandler: error => {},
                listFormatsCallback: (data) => {},
                listTemplatesCallback: (data) => {},
                listDocumentsCallback: (data) => {},
                onAuthenticated: editor => {
                    if (editor) {
                        // Calls for open the editor using a template, document, etc. 
                    }
                },
                
                onClose: () => { 
                    console.log('Closed'); 
                }
            });
        })();
    }; 
</script>
```
> Note: defaultFiletype and exportFiletype is avaliable only Beta version of SDK


# 6) Callbacks from SDK


|Fields                    | Description                                                                                                                |Required|
|--------------------------|----------------------------------------------------------------------------------------------------------------------------|--------|
|**defaultCallback**       | Callback executed after document completion in Trakto Editor. Returns the address of the images for the finished document. |Required|
|**listFormatsCallback**   | Callback executed to return all available page formats to your editor.                                                     |Optional|
|**listTemplatesCallback** | Callback executed to return all available templates to your editor                                                         |Optional|
|**listDocumentsCallback** | Callback executed to return all users documents available                                                                  |Optional|
|**defaultErrorHandler**   | Callback executed to return while using the sdk                                                                            |Optional|
|**onAuthenticated**       | Callback used to open the editor using templates, documents and blank formats                                              |Optional|
|**onClose**               | Triggered when close button is executed                                                                                    |Optional|

# 7) Customizing the UI and responses from editor 

| Attribute                |Type     | Required | Description
|---                       |---      |----      | ---
| **buttonClassName**      | String  | No       | Used to stylize the look of the button according to its application
| **customLoaderImageUrl** | String  | No       | ELoader image link used during editor opening.
| **customLoaderColor**    | String  | No       | Hexadecimal Loader color used during editor opening.
| **customLoaderBgColor**  | String  | No       | Hexadecimal Loader background color used during editor opening.
| **fullScreen**           | Boolean | No       | Last date that template was updated.
| **allowNewPages**        | Boolean | No       | Defines whether the user can create new pages for the document.
| **saveButtonText**       | String  | No       | Defines the text from save button on editor. The defaul value is "Save"
| **saveButtonMessage**    | String  | No       | Defines the text from modal presented after the click on "Save button"
| **closeButtonClass**     | String  | No       | CSS Class for modal close button.
| **closeButton**          | String  | No       | The close the modal button, with the possibility of plain text or html.
| **standaloneMode**       | String  | No       | Defines whether the user instance is created in the startup sdk. True during startup, FALSE when some resource is used.
| **defaultFiletype**      | String  | No       | Defines the default type of file exported to your application. If do you use the button, the type is considered. Otherwise, if do you use JS Functions for start the sdk, this type is considered when the fileType is undefined. The field can receive "url" or "Base64"   
| **downloadType**         | String  | No       | Defines the type of file exported from editor. The attribute accepts: pdf, png, pdf, saveButtonAndFullDownload or fullDownloadOnBrowser
| **lang**                 | Sting   | No       | Define the language of editor. Only pt-BR (Brazilian Portguese) and en-US (English) are supported

## About "downloadType" attribute

The editor can export mp4 (video), png (image) and pdf from design created.
- When "pdf" or "mp4" is chosen, the file is exported on browser;
- For "png", the file is exported on callbacks, using "url" or "base64" on reponse;
- For "fullDownloadOnBrowser", the editor enables all formats for download;
- For "saveButtonAndFullDownload", the editor enables all formats for download and show the save button;


The "fullDownloadOnBrowser" and "saveButtonAndFullDownload" allows the user to choose "mp4", "pdf" or "png" formart
The "downloadType" attribute can be used on start of script and JS Functions.

<img src="https://cdn-std.droplr.net/files/acc_625204/37AB1a" width="100%"/>
# 8) Creating or editing a document via Trakto HTML Button®

### Creating from page format
```
    <button class="<Your Button Class Name>" data-formatid="<Your Format Id>"> 
        Your button title 
    </button>
```

### Creating from template
```
    <button class="<Your Button Class Name>" data-templateid="<Your Template Id>"> 
        Your button title 
    </button>
```

### Editing a user's document
```
    <button class="<Your Button Class Name>" data-documentid="<Your Template Id>"> 
        Your button title 
    </button>
```


# 9) JS Functions - Managing editor using response from onAuthenticated callback

## Functions
|Function               | Required | Description                                    
|-----------------------|----------|------------------------------------------------|
|**openDocument**       | No       | Opens the document previously created by user  |
|**openFromTemplate**   | No       | Creates the document from a template           |
|**openFromFormat**     | No       | Creates the document from a pages format       |
|**openBlank**          | No       | Create a new document from a custom size       |

#### Atributes

|Function               | Required | Description                                                                           | Required |                                     
|-----------------------|----------|---------------------------------------------------------------------------------------|----------|
|**backgroundImage**    | No       | Image url that can be used in the art background. Empty if you do not want to include.| Required |
|**width**              | No       | Page's Width                                                                          | Required |
|**height**             | No       | Page's Height                                                                         | Required |
|**exportResolution**   | Yes      | Export Resolution                                                                     | Required |
|**exportFiletype**     | No       | Type of exported file. Only base64 and url are accepted on attribute.                 | Optional |
|**data**               | -        | Response from Trakto's editor                                                         | Required |
|**downloadType**       | No       | Defines the type of file exported from editor. The attribute accepts: fullDownloadOnBrowser, pdf, png or pdf. The default value is png | Optionnal | 
## How to use

### openDocument
```
<script>
    window.onload = () => {
      (function () {
        TraktoEditor.init({
            ...sdk_configurations_and_callbacks,
            onAuthenticated: editor => {
                editor..openDocument('document_id', data => console.log('Response from editor', data));
            }
        }
    )};
</script>
```

### openFromTemplate
```
<script>
    const designConfig = { 
            exportResolution: [...your_export_quality],
            exportFiletype: 'url' | 'base64',
            backgroundImage: '',
            downloadType: 'png | pdf | mp4 | fullDownloadOnBrowser | saveButtonAndFullDownload',
            saveButtonText: 'Text from save button',
            saveButtonMessage: 'Message of downloads modal'
    };

    window.onload = () => {
      (function () {
        TraktoEditor.init({
            ...sdk_configurations_and_callbacks,
            onAuthenticated: editor => {
                editor.openFromTemplate(
                    'template_id', 
                    data => console.log('Response from editor', data), 
                    designConfig
                );
            }
        }
    )};
</script>
```

### openFromFormat
```
<script>
    const designConfig = { 
            exportResolution: [...your_export_quality],
            exportFiletype: 'url' | 'base64',
            backgroundImage: `You can define an url's image here`
            downloadType: 'png | pdf | mp4 | fullDownloadOnBrowser | saveButtonAndFullDownload',
            saveButtonText: 'Text from save button',
            saveButtonMessage: 'Message of downloads modal'
    };

    window.onload = () => {
      (function () {
        TraktoEditor.init({
            ...sdk_configurations_and_callbacks,
            onAuthenticated: editor => {
                editor.openFromTemplate(
                    'template_id', 
                    data => console.log('Response from editor', data), 
                    designConfig
                );
            }
        }
    )};
</script>
```

### openBlank
```
<script>
    const designConfig = { 
            exportResolution: [...your_export_quality],
            exportFiletype: 'url' | 'base64',
            backgroundImage: `You can define an url's image here`
            width: `You can define a custom width here`,
            height: `You can define a custom height here`,
            downloadType: 'png | pdf | mp4 | fullDownloadOnBrowser | saveButtonAndFullDownload',
            saveButtonText: 'Text from save button',
            saveButtonMessage: 'Message of downloads modal'
    };

    window.onload = () => {
      (function () {
        TraktoEditor.init({
            ...sdk_configurations_and_callbacks,
            onAuthenticated: editor => {
                editor.openBlank(
                    data => console.log('Response from editor', data), 
                    designConfig
                );
            }
        }
    )};
</script>
```

### Resolution types
The **exportResolution** resolution attribute define the quality at which the document will be exported by Trakto Editor.

| Type             | Description                             |
|------------------|-----------------------------------------|
| **raw**          | Original image size and quality         |
| **low**          | 30% of original image size and quality  |
| **medium**       | Original image size and quality         |
| **high**         | 3x bigger than original image size      |

# 10) JS Functions - Managing documents, templates, themes and formats using TraktoEditor instance

TraktoEditor instance is the object used on sdk start. See below:

```
<script>
    window.onload = () => {
        (function() {
            TraktoEditor.init({<attributes and callbacks here>})
            }
        )}
</script>
```

You can use the `TraktoEditor` to list, delete, duplicate some resources from SDK.

> If you don't want to use filters send an empty object like "{ }".


## Functions
|Function               | Description                                    | Supported params                                                      |
|-----------------------|------------------------------------------------|-----------------------------------------------------------------------|
|**getDocument**        | Get informations about a document              | Document's id                                                         |
|**duplicateDocument**  | Duplicate an user's document                   | Document's id                                                         |
|**deleteDocument**     | Delete the document previously created by user | Document's id                                                         |
|**listDocuments**      | List all documents previously created by user  | created_between_start & created_between_end, limit                    |
|**listTemplates**      | List published templates                       | created_between_start & created_between_end, page_format_id, theme_id |
|**listFormats**        | List all page formats                          | created_between_start & created_between_end, limit                    |
|**listThemes**         | List all themes used on templates              | created_between_start & created_between_end                           |

## Filters
|Function                   | Required | Type    | Supported functions        | Description                                                                |
|---------------------------|----------|---------|----------------------------|----------------------------------------------------------------------------|
|**created_between_start**  | No       | Date    | all                        |  Filters by initial date. Used in combination with "created_between_end"   |
|**created_between_end**    | No       | Date    | all                        |  Filters by initial date. Used in combination with "created_between_start" |
|**limit**                  | No       | Number  | all                        |  Number of items per page                                                  |
|**page_format_id**         | No       | String  | listTemplates              |  Filter by page's format id                                                |
|**theme_id**               | No       | String  | listTemplates              |  Filter by thems's id                                                      |
|**is_published**           | No       | Boolean | listTemplates              |  Filter by publish status                                                      |

**Example:**

```
    TraktoEditor.listTemplates(
        { 
            created_between_start: new Date(2010, 1, 1), 
            created_between_end: new Date(2025, 6, 31) 
        },
        onSuccessLoadDocs,
        '.page-content__pagination-next',
        '.page-content__pagination-previous'
    );

    function onSuccessLoadDocs(page, buttonAttr) {
        console.log(`Trakto Data - ${page}`);
    }
```

## How to use

### listDocuments

```
    TraktoEditor.listDocuments({ 
        created_between_start: new Date(2010, 1, 1), 
        created_between_end: new Date(2025, 6, 31),
        limit: 15
    },
    <Your_JS_Functions_That_will_receive_list_on_the_page>,
    '<BUTTON_PAGINATION_NEXT_CLASS>',
    '<BUTTON_PAGINATION_PREVIOUS_CLASS>',
    );
```

### deleteDocument

```
    TraktoEditor.deleteDocument('documentId', data => console.log('deleted', data));
```

### duplicateDocument

```
    TraktoEditor.duplicateDocument('documentId', data => console.log('deleted', data));
```

### copyDocumentToUser

```
    TraktoEditor.copyDocumentToUser('documentId', 'email to receive the document', data => console.log('deleted', data));
```


### listTemplates

```Javascript
    TraktoEditor.listTemplates({ 
        created_between_start: new Date(2010, 1, 1), 
        created_between_end: new Date(2025, 6, 31) 
    },
    <Your_JS_Functions_That_will_receive_list_on_the_page>,
    '<BUTTON_PAGINATION_NEXT_CLASS>',
    '<BUTTON_PAGINATION_PREVIOUS_CLASS>');
```

### listFormats

```Javascript
    TraktoEditor.listFormats({ 
        created_between_start: new Date(2010, 1, 1), 
        created_between_end: new Date(2025, 6, 31),
        limit: 10
    },
    <Your_JS_Functions_That_will_receive_list_on_the_page>,
    '<BUTTON_PAGINATION_NEXT_CLASS>',
    '<BUTTON_PAGINATION_PREVIOUS_CLASS>');
```

### listThemes

```Javascript
    TraktoEditor.listThemes({ 
        created_between_start: new Date(2010, 1, 1), 
        created_between_end: new Date(2025, 6, 31) 
    },
    <Your_JS_Functions_That_will_receive_list_on_the_page>,
    '<BUTTON_PAGINATION_NEXT_CLASS>',
    '<BUTTON_PAGINATION_PREVIOUS_CLASS>');
```

# 11) Objects model (Documents, Templates, Pages formats, Themes)

## Templates

**Objects provided by:** 

- listTemplatesCallback
- listTemplates

### Strutcture

```JSON
{
    [
        {
            "id": "nT1j4cCle3L2hCs",
            "title": "Template",
            "printable": false,
            "tags": ["tag1", "tag2", "tag3"],
            "theme_reference": "M4S8KfaL7Fi0uSbfYFYF",
            "pages": [
                {
                    "page_index": 0,
                    "page_format_id": "H6BWnAc27l8hMvbItcmJ"
                }
            ],
            "page_format_reference": "H6BWnAc27l8hMvbItcmJ",
            "cover": {
                "low": "https://xyz.trakto.io/1234.png",
                "medium": "https://xyz.trakto.io/qwerty.png",
                "high": "https://xyz.trakto.io/zxcvb.png",
                "raw": "https://xyz.trakto.io/asdfg.png"
            },
            "thumbs": [
                "low":{
                    "bytes": 12345,
                    "dimensions":{
                        "height": 12345,
                        "width": 12345
                    },
                    "url": "https://xyz.trakto.io/abcd.png"
                },
                "medium":{
                    "bytes": 12345,
                    "dimensions":{
                        "height": 12345,
                        "width": 12345
                    },
                    "url": "https://xyz.trakto.io/abcd.png"
                },
                "high":{
                    "bytes": 12345,
                    "dimensions":{
                        "height": 12345,
                        "width": 12345
                    },
                    "url": "https://xyz.trakto.io/abcd.png"
                }                
            ],
            "created_at": "2019-05-10T12:41:24.018Z",
            "updated_at": "2019-05-10T12:41:24.018Z"
        }
    ]
}
```

### Model

| Attribute         |Type       | Description
|---                |---        | ---
|**id**             | String    | Templates's id. This field is unique
|**created_at**     | Date      | Date the document was created.
|**thumb**          | Object    | Image of the first page of the Template that was created by the user.
|**low**            | String    | Thumb with regular low.
|**medium**         | String    | Thumb with regular medium.
|**height**         | String    | Thumb with regular high.
|**page_index**     | Number    | Represents the index (order number) of the page in the document.
|**page_format_id** | String    | Page's format identifier.

## Documents

**Objects provided by:**

- defaultCallback
- listDocumentsCallback
- listDocuments

### Strutcture

```JSON
    [
        {
            "user_id": "59YvyzoCi0IMS7xybbRG",
            "document_id": "daOOI88dbbRG",
            "created_at": "2019-07-11T12:18:33.179Z", 
            "updated_at": "2019-07-11T12:18:33.179Z",
            "pages":[
                    {   
                        {
                            "page_index": 0,
                            "page_format_id": "stehrsxvgm",
                            "thumb":{
                            "dimensions":{
                                "height": 12345,
                                "width": 12345
                            },
                            "edited": false,
                                "low": "https://xyz.trakto.io/1234.png",
                                "medium": "https://xyz.trakto.io/qwerty.png",
                                "high": "https://xyz.trakto.io/zxcvb.png",
                                "raw": "https://xyz.trakto.io/asdfg.png"
                            }
                        },
                        {   
                            "page_index": 1,
                            "page_format_id": "ldecjyiuqm",
                            "thumbs": [
                                "low":{
                                    "bytes": 12345,
                                    "dimensions":{
                                        "height": 12345,
                                        "width": 12345
                                    },
                                    "url": "https://xyz.trakto.io/abcd.png"
                                },
                                "medium":{
                                    "bytes": 12345,
                                    "dimensions":{
                                        "height": 12345,
                                        "width": 12345
                                    },
                                    "url": "https://xyz.trakto.io/abcd.png"
                                },
                                "high":{
                                    "bytes": 12345,
                                    "dimensions":{
                                        "height": 12345,
                                        "width": 12345
                                    },
                                    "url": "https://xyz.trakto.io/abcd.png"
                                }                
                            ]
                        }
                }
            ]
        }
    ]
```

### Model

| Attribute         |Type       | Description
|---                |---        | ---
|**user_id**        | String    | User's id. This field is unique
|**document_id**    | String    | Document's id. This field is unique
|**created_at**     | Date      | Date the document was created.
|**edited**         | String    | Identifies if the document has been changed
|**thumb**          | Object    | Image of the first page of the Template that was created by the user.
|**thumbnail**      | String    | Thumb with thumbnail quality.
|**low**            | String    | Thumb with regular low.
|**medium**         | String    | Thumb with regular medium.
|**height**         | String    | Thumb with regular high.
|**page_index**     | Number    | Represents the index (order number) of the page in the document.
|**page_format_id** | String    | Page's format identifier.

## Page's format

**Objects provided by:**

- listFormatsCallback
- listFormats

### Strutcture
```JSON
{
    [
          {
            "id": "IVGTOocCRgmT1F0",
            "title": "Page Format 1",
            "canva_dimension": {
                "height": 234,
                "width": 234,
                "unit": "px"
            },
            "thumbs": {
                "low": "https://xyz.trakto.io/1234.png",
                "medium": "https://xyz.trakto.io/qwerty.png",
                "high": "https://xyz.trakto.io/zxcvb.png",
                "raw": "https://xyz.trakto.io/asdfg.png"
            },
            "created_at": "2019-07-18T18:35:09.418Z",
            "updated_at": "2019-07-18T18:35:33.981Z"
          }
    ]
}
```

### Model

| Attribute         |Type       | Description
|---                |---        | ---
|**id**             | String    | Template's identifier.
|**created_at**     | Date      | Date the template was created.
|**updated_at**     | Date      | Last date that template was updated.
|**deleted_at**     | Date      | Template deleted date.
|**title**          | String    | Title of Template.
|**is_published**   | Boolean   | Identifies whether the template is available for use by users 
|**published_at**   | Date      | Date of availability
|**Thumb**          | Object    | Image of the first page of the template that was created by the user.
|**Cover**          | Object    | Promotional Image
|**low**            | String    | Thumb with regular low
|**medium**         | String    | Thumb with regular medium
|**hight**          | String    | Thumb with regular high
|**printable**      | Boolean   | Identifies whether print clipping marks are enabled
|**page_index**     | Number    | Represents the index (order number) of the page in the document
|**page_format_id** | String    | Page's format identifier



## Themes

**Objects provided by:**

- listThemes

### Structure

```
{
    "id": "ctWmEMV7s",
    "titles":{
        "en_us": "Christmas",
        "pt_BR": "Natal",
    },
    "locale": [ "pt_BR", "en_us" ],
    "created_at": "2020-02-19T14:37:27.209Z",
    "updated_at": "2020-04-09T12:44:05.147Z"
}
```

### Model

| Attribute         |Type       | Description                        |
|-------------------|-----------|------------------------------------|
|**id**             | String    | Themes's identifier.               |
|**created_at**     | Date      | Date the theme was created.        |
|**updated_at**     | Date      | Last date that theme was updated.  |
|**titles**         | String    | Title defined by admin.            |


# 10) Rest API

All the enpdoints are enabled just in user context. Thus, the informations that will be used refers only to a user connected to his custom editor created with Trakto®

### Create an Authentication Token for dashboard login [/auth]

"Authentication token" or "authToken" are generated keys for make login with Trakto's Dashboard. 
For example you could create a authentication token if you can send directly an user from your platform to Trakto's Dashboard without need fill the login page.

For send the user to dashboard, use the route: `https://[your dashboard link]/auth/i/:authToken`

> **Note:** Now, this request is avaliable only beta version for API and Dashboard. 

### Request [POST]

+ Request 

    + Header 

                Content-Type: application/json
                Origin: [your domain]

    + Body
    
            {
                "user_email": "user@trakto.io",
                "product_key": "3fak2krda"
            }


+ Response 200 (application/json)

            {
                "email": "user@trakto.io",
                "app_id": "59YvyzoCi0IMS7xybbRG",
                "products": [
                    "3fak2krda"
                ],
                "role": {
                    "title": "User",
                    "value": "user"
                },
                "token": "6ScvaPPSDpHT",
                "authToken": "hdWQiOiJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNv"
            }

### Enable or disable user authentication [/auth/permission]
Blocks or enable user authentication (login) on platform. 

| Attribute               |Type          | Description
|---                      |---           | ---
|**user_email**           | String       | User's email
|**can_authenticate**     | Booelan      | If true, user can make login
|**product_key**          | Booelan      | You product Key used by user

### Request [POST]

+ Request 

    + Header 

                Content-Type: application/json
                Origin: http://localhost:8080
    + Body
    
            {   
                "user_email": "user@trakto.io",
                "product_key": "g3l5yDh",
                "can_authenticate": false
            }

+ Response 200 (application/json)

            {
                "status": true
            }

### Receive user profile [/user]
List all basic profile's data from user

| Attribute                 |Type           | Description
|---                        |---            | ---
|**email**                  | String        | User's email.
|**can_authenticate**       | Boolean       | Defines if this user can authenticate or not with other Trakto's plataform.
|**avatar**                 | String        | User's profile image
|**firstname**              | String        | User's firstname
|**lastname**               | String        | User's lastname
|**phonenumber**            | String        | User's phonenumber

### Request [GET]

+ Request 

    + Header 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG

+ Response 200 (application/json)

                {
                    "email": "userb@trakto.io",
                    "can_authenticate": true,
                    "firstname": "Lorem",
                    "lastname": "Ipsum",
                    "phonenumber": "11999999999",
                    "avatar": "https://cdn.link.com/abcd.png"
                }

### List all Templates [/templates]

| Attribute         |Type       | Description
|---                |---        | ---
|**id**             | String    | Template's identifier.
|**created_at**     | Date      | Date the template was created.
|**updated_at**     | Date      | Last date that document was updated.
|**deleted_at**     | Date      | Template deleted date.
|**title**          | String    | Title defined by user.
|**thumb**          | Object    | Image of the first page of the Template that was created by the user.
|**cover**          | Object    | Promotional image.
|**low**            | String    | Thumb with regular low.
|**medium**         | String    | Thumb with regular medium.
|**height**         | String    | Thumb with regular high.
|**printable**      | Boolean   | Identifies whether print clipping marks are enabled.
|**page_index**     | Number    | Represents the index (order number) of the page in the document.
|**page_format_id** | String    | Page's format identifier.
|**order_sort**     | String    | Represent "direction" of list order. The values acceptables are: "asc" and "desc"
|**order_by**       | String    | Represent type of list order. The values acceptables are: "created_at" and "updated_at"

### Request [GET]

+ Request 

    + Header 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG

+ Response 200 (application/json)

        [
            {
                "id": "wgdksubqemheoqo",
                "created_at": "2019-07-11T12:18:33.179Z", 
                "updated_at": "2019-07-11T12:18:33.179Z",
                "published_at": "2019-07-11T12:18:33.179Z", 
                "is_published": true,
                "title": "Lorem Ipsum",
                "printable": false,
                "thumb": {
                    "dimensions":{
                        "height": 12345,
                        "width": 12345
                    },
                    "edited": false,
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "cover": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "pages":[
                    {   
                        "page_index": 0,
                        "page_format_id": "stehrsxvgm"
                    },
                    {   
                        "page_index": 1,
                        "format_id": "ldecjyiuqm"
                    }
                
                ]
            }
        ]


### Receive a Template from Id [/templates/{template_id}]


### Request [GET]

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080

+ Parameters
    + template_id (required, string, `vbqaevoshnyuzss`) ... Template's ID
    

+ Response 200 (application/json)

            {
                "id": "wgdksubqemheoqo",
                "created_at": "2019-02-17T19:13:06.577Z",
                "updated_at": "2019-02-17T19:13:06.577Z",
                "published_at": "2019-02-17T19:13:06.577Z",
                "is_published": true,
                "title": "Lorem Ipsum",
                "printable": false,
                "thumb": {
                    "dimensions":{
                        "height": 12345,
                        "width": 12345
                    },
                    "edited": false,
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "cover": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "pages":[
                    {   
                        "page_index": 0,
                        "page_format_id": "stehrsxvgm"
                    },
                    {   
                        "page_index": 1,
                        "format_id": "ldecjyiuqm"
                    }
            }
## List all Formats [/formats]

This endpoint list all formats that can used for create a empty document.


| Attribute         |Type       | Description
|---                |---        | ---
|**id**             | String    | Template's identifier.
|**created_at**     | Date      | Date the template was created.
|**updated_at**     | Date      | Last date that template was updated.
|**deleted_at**     | Date      | Template deleted date.
|**title**          | String    | Title of Template.
|**is_published**   | Boolean   | Identifies whether the template is available for use by users 
|**published_at**   | Date      | Date of availability
|**Thumb**          | Object    | Image of the first page of the template that was created by the user.
|**Cover**          | Object    | Promotional Image
|**low**            | String    | Thumb with regular low
|**medium**         | String    | Thumb with regular medium
|**hight**          | String    | Thumb with regular high
|**printable**      | Boolean   | Identifies whether print clipping marks are enabled
|**page_index**     | Number    | Represents the index (order number) of the page in the document
|**page_format_id** | String    | Page's format identifier


### Request [GET]

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080
    
+ Response 200 (application/json)

        [
            {
                "id": "pilezylzxvg",
                "created_at": "2019-07-11T12:18:33.179Z", 
                "updated_at": "2019-07-11T12:18:33.179Z",
                "title": "Social",
                "canva_dimension": {
                    "height": 480,
                    "width": 480,
                    "unit": "px"
                },
                "thumbs": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                }
            }
        ]

## Format from ID [/formats/{format_id}]


### Request [GET]

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080

+ Parameters
    + format_id (required, string, `vbqaevoshnyuzss`) ... Page's format ID
    
+ Response 200 (application/json)

            {
                "id": "vbqaevoshnyuzss",
                "created_at": "2019-07-11T12:18:33.179Z", 
                "updated_at": "2019-07-11T12:18:33.179Z",
                "title": "Social",
                "canva_dimension": {
                    "height": 480,
                    "width": 480,
                    "unit": "px"
                },
                "thumbs": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                }
            }


## List all User's Documents [/documents]


| Attribute         |Type       | Description
|---                |---        | ---
|**id**             | String    | Document's identifier.
|**created_at**     | String    | Date the document was created.
|**updated_at**     | String    | Last date that document was updated.
|**deleted_at**     | String    | Document's deleted date document.
|**link**           | Object    | Refers to document's preview. For document preview use the path: https://trakto.link/your_link_name
|**title**          | String    | Title defined by user.
|**edited**         | String    | Identifies if the document has been changed
|**Thumb**          | Object    | Image of the first page of the document that was created by the user.
|**low**            | String    | Thumb with regular low.
|**medium**         | String    | Thumb with regular medium.
|**high**           | String    | Thumb with regular high.
|**printable**      | Boolean   | Identifies whether print clipping marks are enabled.
|**page_index**     | Number    | Represents the index (order number) of the page in the document.
|**page_format_id** | String    | Page's format identifier.
|**order_sort**     | String    | Represent "direction" of list order. The values acceptables are: "asc" and "desc"
|**order_by**       | String    | Represent type of list order. The values acceptables are: "created_at" and "update_at"

### Request [GET]

+ Request 
    
    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080

+ Response 200 (application/json)

        [
            {
                "id": "wgdksubqemheoqo",
                "created_at": "2019-07-11T12:18:33.179Z",
                "updated_at": "2019-07-11T12:18:33.179Z",
                "title": "Lorem Ipsum",
                "printable": false,
                "edited": true,
                "link": {
                    "link_name": "/path_to_preview",
                    "link_qrcode": "https://xyz.trakto.io/1234.png"
                }
                "thumb": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "pages":[
                    {   
                        "page_index": 0,
                        "page_format_id": "stehrsxvgm"
                    },
                    {   
                        "page_index": 1,
                        "format_id": "ldecjyiuqm"
                    }
                
                ]
            }
        ]


## Update document's title [/documents/{document_id}/title]

| Attribute         |Type       | Description
|---                |---        | ---
|**title**          | String    | Title of user's document

### Request [POST]

+ Parameters
    + document_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Document's ID

+ Request

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG    
    + Body
    
            {
                "title": "Lorem Ipsum"
            }


+ Response 200 (application/json)
    
            {
                "title": "Lorem Ipsum"
            }


## Create and update link of document's preview [/documents/{document_id}/link]

To create a new link of document's preview

| Attribute         |Type       | Description
|---                |---        | ---
|**visits**         | Object    | Description of visits
|**region**         | String    | Visit's city
|**total_visits**   | Integer   | Count of visits
|**date**           | Date      | Related date

### Request [POST]

+ Parameters
    + document_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Document's ID

+ Request

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG    
    + Body
    
            {
                "link_name": "LoremIpsum"
            }

+ Response 200 (application/json)

            {
                "document_link": "https://trakto.link/LoremIpsum"
            }


### Statistics from document's preview [/documents/{document_id}/statistics]
Receive's all count of visits grouped by region from document's preview.

| Attribute         |Type       | Required | Description
|---                |---        |----      | ---
|**filter**         | String    | No       | Groups your visits based on "day", "week" and "month"
|**fromDate**       | String    | No       | Start date to count your visits. This field must be on format "YYYY-MM-DD"
|**toDate**         | String    | No       | Final date to count your visits. This field must be on format "YYYY-MM-DD"
|**visits**         | Object    | -        | Description of visits
|**totalVisits**    | Integer   | -        | Count of group's visit
### Request [POST]

+ Parameters
    + document_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Document's ID

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG
    + Body
    
            {
                "fromDate": "2020-12-01",
                "toDate": "2020-12-20",
                "filter": "week"
            }

+ Response 200 (application/json)

            {
                "visits": [
                    {
                        "region": "Sao Paulo",
                        "filter": "week",
                        "total_visits": 125,
                        "visits": [
                            {
                                "date": "2020-11-30T00:00:00.000Z",
                                "total_visits": 78
                            },
                            {
                                "date": "2020-12-07T00:00:00.000Z",
                                "total_visits": 47
                            },
                            {
                                "date": "2020-12-14T00:00:00.000Z",
                                "total_visits": 0
                            }
                        ]
                    },
                    {
                        "region": "Paraíba",
                        "filter": "week",
                        "total_visits": 50,
                        "visits": [
                            {
                                "date": "2020-11-30T00:00:00.000Z",
                                "total_visits": 50
                            },
                            {
                                "date": "2020-12-07T00:00:00.000Z",
                                "total_visits": 0
                            },
                            {
                                "date": "2020-12-14T00:00:00.000Z",
                                "total_visits": 0
                            }
                        ]
                    }
                ]
            }

## Create a copy of document [/documents/{document_id}/clone]
Creates a new copy of a user's document.

### Request [POST]

+ Parameters
    + document_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Document's ID

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: 59YvyzoCi0IMS7xybbRG
                
+ Response 200 (application/json)

        {
            "id": "wgdksubqemheoqo",
            "created_at": "2019-07-11T12:18:33.179Z",
            "updated_at": "2019-07-11T12:18:33.179Z",
            "title": "Lorem Ipsum",
            "printable": false,
            "thumb": { },
                "pages":[
                    {   
                        "page_index": 0,
                        "page_format_id": "stehrsxvgm"
                    }
                ]
        }
        
## Delete a document [/documents/{document_id}]


### Request [DELETE]

+ Parameters
    + document_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Document's ID

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080
                
+ Response 200 (application/json)

        {
            true
        }


## Create a document from a template [/documents/create-from-template/{template_id}]
Creates a new document for the user using the contents of a template

### Request [POST]

+ Request 
    
    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080

+ Parameters
    + template_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Template's ID
    
+ Response 200 (application/json)

        [
            {
                "id": "wgdksubqemheoqo",
                "created_at": "2019-07-11T12:18:33.179Z",
                "updated_at": "2019-07-11T12:18:33.179Z",
                "title": "Lorem Ipsum",
                "printable": false,
                "thumbs": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "pages":[
                    {   
                        "page_index": 0,
                        "format_id": "stehrsxvgm"
                    },
                    {   
                        "page_index": 1,
                        "page_format_id": "ldecjyiuqm"
                    }
                
                ]
            }
        ]

## Create a document from Page Format [/documents/create-from-format/{page_format_id}]
### Request [POST]

+ Request 

    + Headers 

                Content-Type: application/json
                API-Secret: 59YvyzoCi0IMS7xybbRG
                User-Token: 0IMS7xybbRG
                Product-Key: 3fak2krda
                Origin: http://localhost:8080

+ Parameters
    + page_format_id (required, string, `1lKM6m5gpL9Z9ZiV`) ... Page format's ID
    
+ Response 200 (application/json)

        [
            {
                "id": "wgdksubqemheoqo",
                "created_at": "2019-07-11T12:18:33.179Z",
                "updated_at": "2019-07-11T12:18:33.179Z",
                "title": "Lorem Ipsum",
                "printable": false,
                "thumbs": {
                    "low": "https://xyz.trakto.io/1234.png",
                    "medium": "https://xyz.trakto.io/qwerty.png",
                    "high": "https://xyz.trakto.io/zxcvb.png",
                    "raw": "https://xyz.trakto.io/asdfg.png"
                },
                "pages":[
                    {   
                        "page_index": 0,
                        "format_id": "stehrsxvgm"
                    },
                    {   
                        "page_index": 1,
                        "page_format_id": "ldecjyiuqm"
                    }
                
                ]
            }
        ]